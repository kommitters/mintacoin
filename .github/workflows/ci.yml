name: Mintacoin CI

on:
  pull_request:
    types: [closed, review_requested, ready_for_review, synchronize, opened]

jobs:
  tests:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB_TEST: mintacoin_test
          POSTGRES_HOST: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        id: beam
        with:
          otp-version: '24.1.2'
          elixir-version: '1.13.4'
      - uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - name: Install Dependencies
        run: mix deps.get
      - name: Check Formatting
        run: mix format --check-formatted
      - name: Restore PLT cache
        uses: actions/cache@v2
        id: plt_cache
        with:
          key: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          restore-keys: |
            ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
          path: |
            priv/plts
      # Create PLTs if no cache was found
      - name: Create PLTs
        if: steps.plt_cache.outputs.cache-hit != 'true'
        run: mix dialyzer --plt
      - name: Run dialyzer
        run: mix dialyzer
      - name: Run Tests
        run: mix test
      - name: Run Credo
        run: mix credo --strict
      - name: Dispatch CD workflow
        if: github.event.pull_request.merged && contains('refs/heads/main', github.ref)
        uses: benc-uk/workflow-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          workflow: Mintacoin Landing CD
